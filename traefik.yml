apiVersion: v1
kind: Namespace
metadata:
  name: ingress-traefik
  labels:
    app.kubernetes.io/name: ingress-traefik

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: traefik-ingress-controller
  namespace: ingress-traefik
  labels:
    app.kubernetes.io/name: ingress-traefik

---

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: traefik-ingress-controller
  labels:
    app.kubernetes.io/name: ingress-traefik
rules:
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch

---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: traefik-ingress-controller
  labels:
    app.kubernetes.io/name: ingress-traefik
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: traefik-ingress-controller
subjects:
- kind: ServiceAccount
  name: traefik-ingress-controller
  namespace: ingress-traefik

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app.kubernetes.io/name: ingress-traefik
  name: certs-claim
  namespace: ingress-traefik
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---

kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: traefik-ingress-controller
  namespace: ingress-traefik
  labels:
    app.kubernetes.io/name: ingress-traefik
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ingress-traefik
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ingress-traefik
        name: traefik-ingress-lb
    spec:
      serviceAccountName: traefik-ingress-controller
      terminationGracePeriodSeconds: 60
      containers:
      - image: traefik
        name: traefik-ingress-lb
        ports:
        - name: http
          containerPort: 80
        - name: https
          containerPort: 443
        - name: admin
          containerPort: 8080
        args:
        - "--api"
        - "--kubernetes"
        - "--logLevel=INFO"
        # - "--logLevel=DEBUG"
        # - "--debug"
        - "--defaultentrypoints=http,https"
        - "--entrypoints=Name:http Address::80 Redirect.EntryPoint:https"
        - "--entrypoints=Name:https Address::443 TLS"
        - "--acme"
        - "--acme.onhostrule"
        - "--acme.entrypoint=https"
        - "--acme.domains=example.com"
        - "--acme.email=info@example.com"
        - "--acme.storage=/certs/acme.json"
        - "--acme.httpchallenge"
        - "--acme.httpchallenge.entrypoint=http"
        volumeMounts:
        - mountPath: /certs
          name: certs-claim
      volumes:
      - name: certs-claim
        persistentVolumeClaim:
          claimName: certs-claim

---

kind: Service
apiVersion: v1
metadata:
  name: traefik-ingress-service
  namespace: ingress-traefik
  labels:
    app.kubernetes.io/name: ingress-traefik
spec:
  selector:
    app.kubernetes.io/name: ingress-traefik
  ports:
    - protocol: TCP
      port: 80
      name: web
    - protocol: TCP
      port: 8080
      name: admin
  type: NodePort
